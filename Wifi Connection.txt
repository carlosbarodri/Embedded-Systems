//DECLARACIONES
#include <Arduino.h>
#include <WiFi.h>
#include <WiFiClient.h>
#include <WiFiAP.h>

//DEFINICIONES
#define LED1 22
#define LED2 23


const char *ssid = "Equipo Dinamita";
const char *password = "12345";

WiFiServer server(80);

//CONFIGURACIONES
void setup() {
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);

  Serial.begin(115200);
  Serial.println();
  Serial.println("Configurando punto de acceso...");

  WiFi.softAP(ssid, password);
  IPAddress myIP = WiFi.softAPIP();
  Serial.print("Direccion IP: ");
  Serial.println(myIP);
  server.begin();

  Serial.println("Servidor iniciado");
}

//BUCLE PRINCIPAL
void loop() {
  int bandera=0;
  int opcion = 0;
  WiFiClient client = server.available();   //Esperar clientes entrantes
  if (client) {                             // si se conecta un cliente,
    Serial.println("Nuevo Cliente.");       // imprimir un mensaje en el puerto serial
    String currentLine = "";                // crear cadena vacia para guardar datos del cliente
    while (client.connected()) {            // ciclar mientras el cliente esta conectado
      if (client.available()) {             // si hay bytes para leer del cliente,
        char c = client.read();             // leer un byte, entonces
        Serial.write(c);                    // imprimirlo en el monitor serial
        if (c == '\n') {                    // si el byte es una nueva linea...

          // si el caracter actual es un final de linea, se tienen dos finales de linea seguidos
          // ese es el final de la petición HTTP del cliente, entonces se debe enviar respuesta:
          if (currentLine.length() == 0) {
            // Los encabezados HTTP siempre inician con un código de respuesta (HTTP/1.1 200 OK)
            client.println("HTTP/1.1 200 OK");
            // y un tipo de contenido para que el cliente sepa el contenido que le enviarán, luego una línea en blanco:
            client.println("Content-type:text/html");
            client.println();

            // el contenido de la respuesta HTTP va después de la respuesta:
            // mostrar un texto con un hipervinculo para encender el LED
            client.print("<!DOCTYPE html>");
            client.print("<html lang='en'>");
            client.print("<head>");
            client.print("<meta charset='UTF-8'>");
            client.print("<meta http-equiv='X-UA-Compatible' content='IE=edge'>");
            client.print("<meta name='viewport' content='width=device-width, initial-scale=1.0'>");
            client.print("<title>LEDS</title>");
            client.print("<style>");
            client.print("html {");
            client.print("line-height: 1.15;");
            client.print("-webkit-text-size-adjust: 100%;");
            client.print("}");
            client.print("body {");
            client.print("margin: 0;");
            client.print("}");
            client.print("main {");
            client.print("display: block;");
            client.print("}");
            client.print("h1 {");
            client.print("font-size: 2em;");
            client.print("margin: 0.67em 0;");
            client.print("}");
            client.print("hr {");
            client.print("box-sizing: content-box; ");
            client.print("height: 0; ");
            client.print("overflow: visible;");
            client.print("}");
            client.print("pre {");
            client.print("font-family: monospace, monospace;");
            client.print("font-size: 1em; ");
            client.print("}");
            client.print("a {");
            client.print("background-color: transparent;");
            client.print("}");
            client.print("abbr[title] {");
            client.print("border-bottom: none; ");
            client.print("text-decoration: underline; ");
            client.print("text-decoration: underline dotted; ");
            client.print("}");
            client.print("b,");
            client.print("strong {");
            client.print("font-weight: bolder;");
            client.print("}");
            client.print("code,");
            client.print("kbd,");
            client.print("samp {");
            client.print("font-family: monospace, monospace;");
            client.print("font-size: 1em; ");
            client.print("}");
            client.print("small {");
            client.print("font-size: 80%;");
            client.print("}");
            client.print("sub,");
            client.print("sup {");
            client.print("font-size: 75%;");
            client.print("line-height: 0;");
            client.print("position: relative;");
            client.print("vertical-align: baseline;");
            client.print("}");
            client.print("sub {");
            client.print("bottom: -0.25em;");
            client.print("}");
            client.print("sup {");
            client.print("top: -0.5em;");
            client.print("}");
            client.print("img {");
            client.print("border-style: none;");
            client.print("}");
            client.print("button,");
            client.print("input,");
            client.print("optgroup,");
            client.print("select,");
            client.print("textarea {");
            client.print("font-family: inherit; ");
            client.print("font-size: 100%;");
            client.print("line-height: 1.15; ");
            client.print("margin: 0; ");
            client.print("}");
            client.print("button,");
            client.print("input { ");
            client.print("overflow: visible;");
            client.print("}");
            client.print("button,");
            client.print("select { ");
            client.print("text-transform: none;");
            client.print("}");
            client.print("button,");
            client.print("[type='button'],");
            client.print("[type='reset'],");
            client.print("[type='submit'] {");
            client.print("-webkit-appearance: button;");
            client.print("}");
            client.print("button::-moz-focus-inner,");
            client.print("[type='button']::-moz-focus-inner,");
            client.print("[type='reset']::-moz-focus-inner,");
            client.print("[type='submit']::-moz-focus-inner {");
            client.print("border-style: none;");
            client.print("padding: 0;");
            client.print("}");
            client.print("button:-moz-focusring,");
            client.print("[type='button']:-moz-focusring,");
            client.print("[type='reset']:-moz-focusring,");
            client.print("[type='submit']:-moz-focusring {");
            client.print("outline: 1px dotted ButtonText;");
            client.print("}");
            client.print("fieldset {");
            client.print("padding: 0.35em 0.75em 0.625em;");
            client.print("}");
            client.print("legend {");
            client.print("box-sizing: border-box; ");
            client.print("color: inherit; ");
            client.print("display: table; ");
            client.print("max-width: 100%; ");
            client.print("padding: 0; ");
            client.print("white-space: normal; ");
            client.print("}");
            client.print("progress {");
            client.print("vertical-align: baseline;");
            client.print("}");
            client.print("textarea {");
            client.print("overflow: auto;");
            client.print("}");
            client.print("[type='checkbox'],");
            client.print("[type='radio'] {");
            client.print("box-sizing: border-box;");
            client.print("padding: 0; ");
            client.print("}");
            client.print("[type='number']::-webkit-inner-spin-button,");
            client.print("[type='number']::-webkit-outer-spin-button {");
            client.print("height: auto;");
            client.print("}");
            client.print("[type='search'] {");
            client.print("-webkit-appearance: textfield; ");
            client.print("outline-offset: -2px; ");
            client.print("}");
            client.print("[type='search']::-webkit-search-decoration {");
            client.print("-webkit-appearance: none;");
            client.print("}");
            client.print("::-webkit-file-upload-button {");
            client.print("-webkit-appearance: button; ");
            client.print("font: inherit; ");
            client.print("}");
            client.print("details {");
            client.print("display: block;");
            client.print("}");
            client.print("summary {");
            client.print("display: list-item;");
            client.print("}");
            client.print("template {");
            client.print("display: none;");
            client.print("}");
            client.print("[hidden] {");
            client.print("display: none;");
            client.print("}");
            client.print("</style>");
            client.print("<style>");
            client.print("h1 {");
            client.print("text-align: center;");
            client.print("}");
            client.print("</style>");
            client.print("<style>");
            client.print(":root{");
            client.print("--azul : #67DDE3;");
            client.print("--blanco: #ffffff;");
            client.print("--gris: #E8E9E7;");
            client.print("--boton-azul: #163BF6;");
            client.print("--boton-verde: #62F866;");
            client.print("--boton-rojo: #FF6565;");
            client.print("--boton-morado: #E091F9;");
            client.print("}");
            client.print("html {");
            client.print("box-sizing: border-box;");
            client.print("font-size: 62.5%;   ");
            client.print("}");
            client.print("*, *:before, *:after {");
            client.print("box-sizing: inherit;");
            client.print("}");
            client.print("body {");
            client.print("font-size: 1.6rem;");
            client.print("line-height: 1.5;");
            client.print("background-image: linear-gradient(to top, var(--azul) 0%, var(--blanco) 100%);");
            client.print("background-repeat: no-repeat;");
            client.print("}");
            client.print("h1{");
            client.print("font-size: 4rem;");
            client.print("}");
            client.print("h2 {");
            client.print("font-size: 3rem;");
            client.print("}");
            client.print("h3 span {");
            client.print("color: #FA0000;");
            client.print("}");
            client.print(".contenedor {");
            client.print("width: min(90%,120rem);");
            client.print("margin: 0 auto;");
            client.print("}");
            client.print(".sombra{");
            client.print("-webkit-box-shadow: 0px 33px 23px -10px rgba(0,0,0,0.71);");
            client.print("-moz-box-shadow: 0px 33px 23px -10px rgba(0,0,0,0.71);");
            client.print("box-shadow: 0px 33px 23px -10px rgba(0,0,0,0.71);");
            client.print("}");
            client.print(".centrar{");
            client.print("text-align: center;");
            client.print("}");
            client.print(".margin {");
            client.print("margin-bottom: -0.8rem;");
            client.print("}");
            client.print(".margin-bottom {");
            client.print("margin-bottom: 5rem;");
            client.print("}");
            client.print(".menu {");
            client.print("background-color: #F0F0F0;");
            client.print("}");
            client.print(".flex{");
            client.print("display: flex;");
            client.print("}");
            client.print(".senal{");
            client.print("height: 5rem;");
            client.print("width: 1rem;");
            client.print("flex-basis: calc(50%);");
            client.print("margin: 0 3rem 0 3rem;");
            client.print("}");
            client.print(".boton{");
            client.print("width: 100%;");
            client.print("height: 100%;");
            client.print("border-radius: .5rem;");
            client.print("font-weight: bold;");
            client.print("text-decoration: none;");
            client.print("text-transform: uppercase;");
            client.print("}");
            client.print(".boton--color1{");
            client.print("background-color: var(--boton-azul);");
            client.print("color: var(--blanco);");
            client.print("}");
            client.print(".boton--color2{");
            client.print("background-color: var(--boton-verde);");
            client.print("color: var(--blanco);");
            client.print("}");
            client.print(".boton--color3{");
            client.print("background-color: var(--boton-morado);");
            client.print("color: var(--blanco);");
            client.print("}");
            client.print(".boton--color4{");
            client.print("background-color: var(--boton-rojo);");
            client.print("color: var(--blanco);");
            client.print("}");
            client.print(".icono{");
            client.print("flex-basis: calc(50%);");
            client.print("}");
            client.print(".footer{");
            client.print("margin-top: 4rem;");
            client.print("}");
            client.print("</style>");
            client.print("</head>");
            client.print("<body>");
            client.print("<main class='contenedor'>");
            client.print("<h1 class='centrar'>Encendido de LEDS <svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-power margin' width='44' height='44' viewBox='0 0 24 24' stroke-width='2.5' stroke='#ff2825' fill='none' stroke-linecap='round' stroke-linejoin='round'>");
            client.print("<path stroke='none' d='M0 0h24v24H0z' fill='none'/>");
            client.print("<path d='M7 6a7.75 7.75 0 1 0 10 0' />");
            client.print("<line x1='12' y1='4' x2='12' y2='12' />");
            client.print("</svg></h1>");
            client.print("<div class='sombra'>");
            client.print("<div class='menu'>");
            client.print("<h2 class='centrar'>Menú</h2>");
            client.print("<div class='flex'>");
            client.print("<p class='senal'><a href='/led1'><button class='boton boton--color1' >LED 1</button></a></p>");
            client.print("<p class='senal'><a href='/led2'><button class='boton boton--color2' >LED 2</button></a></p>");
            client.print("</div>");
            client.print("<div class='flex margin-bottom'>");
            client.print("<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-bulb icono' width='44' height='44' viewBox='0 0 24 24' stroke-width='2' stroke='#000000' fill='none' stroke-linecap='round' stroke-linejoin='round'>");
            client.print("<path stroke='none' d='M0 0h24v24H0z' fill='none'/>");
            client.print("<path d='M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7' />");
            client.print("<path d='M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3' />");
            client.print("<line x1='9.7' y1='17' x2='14.3' y2='17' />");
            client.print("</svg>");
            client.print("<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-bulb icono' width='44' height='44' viewBox='0 0 24 24' stroke-width='2' stroke='#000000' fill='none' stroke-linecap='round' stroke-linejoin='round'>");
            client.print("<path stroke='none' d='M0 0h24v24H0z' fill='none'/>");
            client.print("<path d='M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7' />");
            client.print("<path d='M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3' />");
            client.print("<line x1='9.7' y1='17' x2='14.3' y2='17' />");
            client.print("</svg>");
            client.print("</div>");
            client.print("<div class='flex'>");
            client.print("<p class='senal'><a href='/ambosleds'><button class='boton boton--color3' >ambos leds</button></a></p>");
            client.print("<p class='senal'><a href='/apagar'><button class='boton boton--color4' >apagar</button></a></p>");
            client.print("</div>");
            client.print("<div class='flex'>");
            client.print("<div class='icono centrar'>");
            client.print("<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-bulb' width='44' height='44' viewBox='0 0 24 24' stroke-width='2' stroke='#000000' fill='none' stroke-linecap='round' stroke-linejoin='round'>");
            client.print("<path stroke='none' d='M0 0h24v24H0z' fill='none'/>");
            client.print("<path d='M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7' />");
            client.print("<path d='M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3' />");
            client.print("<line x1='9.7' y1='17' x2='14.3' y2='17' />");
            client.print("</svg>");
            client.print("<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-bulb' width='44' height='44' viewBox='0 0 24 24' stroke-width='2' stroke='#000000' fill='none' stroke-linecap='round' stroke-linejoin='round'>");
            client.print("<path stroke='none' d='M0 0h24v24H0z' fill='none'/>");
            client.print("<path d='M3 12h1m8 -9v1m8 8h1m-15.4 -6.4l.7 .7m12.1 -.7l-.7 .7' />");
            client.print("<path d='M9 16a5 5 0 1 1 6 0a3.5 3.5 0 0 0 -1 3a2 2 0 0 1 -4 0a3.5 3.5 0 0 0 -1 -3' />");
            client.print("<line x1='9.7' y1='17' x2='14.3' y2='17' />");
            client.print("</svg>");
            client.print("</div>");
            client.print("<svg xmlns='http://www.w3.org/2000/svg' class='icon icon-tabler icon-tabler-sun-off icono' width='44' height='44' viewBox='0 0 24 24' stroke-width='2' stroke='#000000' fill='none' stroke-linecap='round' stroke-linejoin='round'>");
            client.print("<path stroke='none' d='M0 0h24v24H0z' fill='none'/>");
            client.print("<line x1='3' y1='3' x2='21' y2='21' />");
            client.print("<path d='M16 12a4 4 0 0 0 -4 -4m-2.834 1.177a4 4 0 0 0 5.66 5.654' />");
            client.print("<path d='M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7' />");
            client.print("</svg>");
            client.print("</div>");
            client.print("</div>");
            client.print("</div>");
            client.print("</main>");
            client.print("<footer class='footer'>");
            client.print("<h3 class='centrar'>Equipo 3 <span>DINAMITA</span></h3>");
            client.print("</footer>");
            client.print("</body>");
            client.print("</html>");

            // mostrar un texto con un hipervinculo para apagar el LED

            // La respuesta HTTP termina con otra linea en blanco:
            client.println();
            // romper el bucle
            break;
          } else {    // si se detecta una nueva linea, limpiarla:
            currentLine = "";
          }
        } else if (c != '\r') {  // si se detecta cualquier cosa, excepto un retorno de carro,
          currentLine += c;      // añadirlo a la línea actual
        }

        // Revisar si la petición del cliente fue "GET /H" o "GET /L":


        
        if (currentLine.endsWith("GET /led1")){
          bandera=1;           // GET /H enciende el LE
        }
        else if (currentLine.endsWith("GET /led2")){
          bandera=2;  
        }         // GET /L apaga el LED
        else if (currentLine.endsWith("GET /ambosleds"))
          bandera=3; 
        else if (currentLine.endsWith("GET /apagar"))
          bandera=4;

        if (bandera==1){
          digitalWrite(LED1, HIGH);
          delay(250);
          digitalWrite(LED1, LOW);
          delay(250);
        }
        else if (bandera==2){
          digitalWrite(LED2, HIGH);
          delay(250);
          digitalWrite(LED2, LOW);
          delay(250);
        }
        else if (bandera==3){
          digitalWrite(LED1, HIGH);
          digitalWrite(LED2, HIGH);
          delay(750);
          digitalWrite(LED1, LOW);
          digitalWrite(LED2, LOW);
          delay(750);
        }
        else{
          digitalWrite(LED1, LOW);
          digitalWrite(LED2, LOW);
        }
        
      }
    }
    // cerrar la conexión:
    client.stop();
    Serial.println("Client Disconnected.");
  }
}